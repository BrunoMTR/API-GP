{
  "openapi": "3.0.1",
  "info": {
    "title": "API, PROCESS MANAGER",
    "version": "1.0"
  },
  "paths": {
    "/applications": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Create a new application",
        "description": "Creates a new application entity with the provided information. Validates the input before persisting.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "List all applications",
        "description": "Returns a list of all applications registered in the system.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/applications/{id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Retrieve an application by ID",
        "description": "Fetches the application details associated with the specified unique identifier.",
        "operationId": "applicationId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Update an existing application",
        "description": "Updates the properties of an existing application using the specified ID and request body.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Delete an application",
        "description": "Deletes the application that matches the provided ID from the system.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/flows": {
      "post": {
        "tags": [
          "Flows"
        ],
        "summary": "Create a new application flow",
        "description": "Creates a new nodes entity with the provided information. Validates the input before persisting.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Graph"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/flows/{applicationId}": {
      "get": {
        "tags": [
          "Flows"
        ],
        "summary": "Retrieve an application flow by the application ID",
        "description": "Fetches the flow details associated with the specified unique application identifier.",
        "operationId": "flowByApplicationId",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/units": {
      "post": {
        "tags": [
          "Units"
        ],
        "summary": "Create a new Unit",
        "description": "Creates a new unit entity with the provided information. Validates the input before persisting.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "List all units",
        "description": "Returns a list of all units registered in the system.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/units/{unitId}": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Retrieve an unit by ID",
        "description": "Fetches the unit details associated with the specified unique identifier.",
        "operationId": "unitId",
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Units"
        ],
        "summary": "Delete an unit",
        "description": "Deletes the unit that matches the provided ID from the system.",
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Units"
        ],
        "summary": "Update an existing unit",
        "description": "Updates the properties of an existing unit using the specified ID and request body.",
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Application": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the application.",
            "nullable": true
          },
          "abbreviation": {
            "type": "string",
            "description": "Abbreviation of the application's name.",
            "nullable": true
          },
          "team": {
            "type": "string",
            "description": "Name of the team responsible for the application.",
            "nullable": true
          },
          "teamEmail": {
            "type": "string",
            "description": "Contact email of the responsible team.",
            "nullable": true
          },
          "applicationEmail": {
            "type": "string",
            "description": "Main email address of the application.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents an application that contains processes and steps."
      },
      "Graph": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Node": {
        "type": "object",
        "properties": {
          "originId": {
            "type": "integer",
            "description": "Foreign key for origin unit.",
            "format": "int32"
          },
          "destinationId": {
            "type": "integer",
            "description": "Foreign key for destination unit.",
            "format": "int32"
          },
          "approvals": {
            "type": "integer",
            "description": "Number of approvals required to traverse this edge (null if not applicable).",
            "format": "int32",
            "nullable": true
          },
          "direction": {
            "type": "string",
            "description": "Direction of the transition (e.g., Forward or Backward).",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Unit": {
        "type": "object",
        "properties": {
          "abbreviation": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}